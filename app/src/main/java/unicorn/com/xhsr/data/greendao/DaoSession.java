package unicorn.com.xhsr.data.greendao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import unicorn.com.xhsr.data.greendao.ProcessingMode;
import unicorn.com.xhsr.data.greendao.ProcessingTimeLimit;
import unicorn.com.xhsr.data.greendao.EmergencyDegree;
import unicorn.com.xhsr.data.greendao.EquipmentCategory;
import unicorn.com.xhsr.data.greendao.Equipment;
import unicorn.com.xhsr.data.greendao.Building;

import unicorn.com.xhsr.data.greendao.ProcessingModeDao;
import unicorn.com.xhsr.data.greendao.ProcessingTimeLimitDao;
import unicorn.com.xhsr.data.greendao.EmergencyDegreeDao;
import unicorn.com.xhsr.data.greendao.EquipmentCategoryDao;
import unicorn.com.xhsr.data.greendao.EquipmentDao;
import unicorn.com.xhsr.data.greendao.BuildingDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig processingModeDaoConfig;
    private final DaoConfig processingTimeLimitDaoConfig;
    private final DaoConfig emergencyDegreeDaoConfig;
    private final DaoConfig equipmentCategoryDaoConfig;
    private final DaoConfig equipmentDaoConfig;
    private final DaoConfig buildingDaoConfig;

    private final ProcessingModeDao processingModeDao;
    private final ProcessingTimeLimitDao processingTimeLimitDao;
    private final EmergencyDegreeDao emergencyDegreeDao;
    private final EquipmentCategoryDao equipmentCategoryDao;
    private final EquipmentDao equipmentDao;
    private final BuildingDao buildingDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        processingModeDaoConfig = daoConfigMap.get(ProcessingModeDao.class).clone();
        processingModeDaoConfig.initIdentityScope(type);

        processingTimeLimitDaoConfig = daoConfigMap.get(ProcessingTimeLimitDao.class).clone();
        processingTimeLimitDaoConfig.initIdentityScope(type);

        emergencyDegreeDaoConfig = daoConfigMap.get(EmergencyDegreeDao.class).clone();
        emergencyDegreeDaoConfig.initIdentityScope(type);

        equipmentCategoryDaoConfig = daoConfigMap.get(EquipmentCategoryDao.class).clone();
        equipmentCategoryDaoConfig.initIdentityScope(type);

        equipmentDaoConfig = daoConfigMap.get(EquipmentDao.class).clone();
        equipmentDaoConfig.initIdentityScope(type);

        buildingDaoConfig = daoConfigMap.get(BuildingDao.class).clone();
        buildingDaoConfig.initIdentityScope(type);

        processingModeDao = new ProcessingModeDao(processingModeDaoConfig, this);
        processingTimeLimitDao = new ProcessingTimeLimitDao(processingTimeLimitDaoConfig, this);
        emergencyDegreeDao = new EmergencyDegreeDao(emergencyDegreeDaoConfig, this);
        equipmentCategoryDao = new EquipmentCategoryDao(equipmentCategoryDaoConfig, this);
        equipmentDao = new EquipmentDao(equipmentDaoConfig, this);
        buildingDao = new BuildingDao(buildingDaoConfig, this);

        registerDao(ProcessingMode.class, processingModeDao);
        registerDao(ProcessingTimeLimit.class, processingTimeLimitDao);
        registerDao(EmergencyDegree.class, emergencyDegreeDao);
        registerDao(EquipmentCategory.class, equipmentCategoryDao);
        registerDao(Equipment.class, equipmentDao);
        registerDao(Building.class, buildingDao);
    }
    
    public void clear() {
        processingModeDaoConfig.getIdentityScope().clear();
        processingTimeLimitDaoConfig.getIdentityScope().clear();
        emergencyDegreeDaoConfig.getIdentityScope().clear();
        equipmentCategoryDaoConfig.getIdentityScope().clear();
        equipmentDaoConfig.getIdentityScope().clear();
        buildingDaoConfig.getIdentityScope().clear();
    }

    public ProcessingModeDao getProcessingModeDao() {
        return processingModeDao;
    }

    public ProcessingTimeLimitDao getProcessingTimeLimitDao() {
        return processingTimeLimitDao;
    }

    public EmergencyDegreeDao getEmergencyDegreeDao() {
        return emergencyDegreeDao;
    }

    public EquipmentCategoryDao getEquipmentCategoryDao() {
        return equipmentCategoryDao;
    }

    public EquipmentDao getEquipmentDao() {
        return equipmentDao;
    }

    public BuildingDao getBuildingDao() {
        return buildingDao;
    }

}
